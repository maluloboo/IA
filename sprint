{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "source": [
        "import tensorflow as tf\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "from tensorflow.keras.preprocessing import image\n",
        "from google.colab import files"
      ],
      "metadata": {
        "id": "zzNyjMRQgVay"
      },
      "execution_count": 11,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def load_model_from_h5(model_path):\n",
        "    model = tf.keras.models.load_model(model_path, compile=False)\n",
        "    return model\n",
        "\n",
        "def load_class_names(labels_path):\n",
        "    with open(labels_path, 'r') as f:\n",
        "        class_names = [line.strip() for line in f.readlines()]\n",
        "    return class_names"
      ],
      "metadata": {
        "id": "Qq-yV0gGgVc2"
      },
      "execution_count": 12,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def prepare_image(image_path):\n",
        "    img = image.load_img(image_path, target_size=(224, 224))\n",
        "    img_array = image.img_to_array(img)\n",
        "    img_array = np.expand_dims(img_array, axis=0)\n",
        "    img_array /= 255.0\n",
        "    return img_array\n",
        "\n",
        "def classify_and_display_image(model, class_names, img_path):\n",
        "    data = prepare_image(img_path)\n",
        "    prediction = model.predict(data)\n",
        "    index = np.argmax(prediction)\n",
        "    class_name = class_names[index]\n",
        "    confidence_score = prediction[0][index]\n",
        "\n",
        "    print(\"Class:\", class_name)\n",
        "\n",
        "    img = image.load_img(img_path)\n",
        "    plt.imshow(img)\n",
        "    plt.title(f\"Predicted: {class_name} ({confidence_score:.2f})\")\n",
        "    plt.axis('off')\n",
        "    plt.show()\n"
      ],
      "metadata": {
        "id": "wnr5bQVIgVg_"
      },
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def upload_and_classify_image(model, class_names):\n",
        "    uploaded = files.upload()\n",
        "    for img_name in uploaded.keys():\n",
        "        classify_and_display_image(model, class_names, img_name)\n",
        "\n",
        "model_path = 'keras_model.h5'\n",
        "labels_path = 'labels.txt'\n",
        "\n",
        "model = load_model_from_h5(model_path)\n",
        "class_names = load_class_names(labels_path)"
      ],
      "metadata": {
        "id": "vz2gp1_R6IFZ"
      },
      "execution_count": 14,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "upload_and_classify_image(model, class_names)"
      ],
      "metadata": {
        "id": "OtjtLqdS6I4Z"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}
